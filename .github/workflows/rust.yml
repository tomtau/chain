name: Rust
on:
  pull_request:
    branches:
        - master
  push:
    branches:
      - master
      - trying
      - staging
jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: "-- -D warnings"

  security_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo bin
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-audit
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test-stable:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install deps
        run: sudo apt-get install libzmq3-dev protobuf-compiler
      - name: temporary mock hack for stable
        run: |
          sed -i.bak -E "s/default = \[\".+\"\]/default = \[\"mock-enclave\"\]/" chain-abci/Cargo.toml;
      - uses: actions-rs/cargo@v1
        with:
          command: build
        env:
          RUSTFLAGS: "-Ctarget-feature=+aes,+sse2,+sse4.1,+ssse3 -D warnings"
          NETWORK_ID: "ab"
      - name: test-stable
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          RUSTFLAGS: "-Ctarget-feature=+aes,+sse2,+sse4.1,+ssse3 -D warnings"
          NETWORK_ID: "ab"

  test-nightly-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Install deps
        run: sudo apt-get install libzmq3-dev protobuf-compiler
      - uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=unwind -Zpanic_abort_tests"
          NETWORK_ID: "ab"
      - uses: actions-rs/grcov@v0.1
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ steps.coverage.outputs.report }}
          yml: ./codecov.yml
          fail_ci_if_error: true
